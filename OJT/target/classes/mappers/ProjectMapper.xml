<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ojt.mapper.ProjectMapper">

	<!-- ============== 프로젝트 ============== -->
	<!-- 프로젝트 검색
		 프로젝트 번호, 프로젝트 명, 고객사 이름, 시작일, 종료일, 프로젝트 상태 -->
	<select id="searchProjectList" resultType="com.ojt.bean.ProjectBean">
		SELECT * FROM (
			SELECT 
				prj.prj_seq as projectNumber,
				prj.prj_nm as projectName,
				cust.cust_nm as customerName,
				prj.prj_st_dt as projectStartDate,
				prj.prj_ed_dt as projectEndDate,
				prj.maint_st_dt as maintStartDate,
				prj.maint_ed_dt as maintEndDate,
				cd.dtl_cd_nm AS projectStateName,
				cd.dtl_cd as projectStateCode,
				row_number() OVER (ORDER BY prj.prj_seq DESC) AS rn
			FROM project_info prj
			LEFT JOIN code_detail cd ON cd.mst_cd = 'PS01' AND prj.ps_cd = cd.dtl_cd
			LEFT JOIN customer cust ON cust.cust_seq = prj.cust_seq
			WHERE prj.prj_nm LIKE #{projectName}
			${optionalQuery}
		)
		WHERE rn BETWEEN #{index} AND #{endIndex}
	</select>
	
	<!-- 검색시 나올수있는 최대 갯수 -->
	<select id="searchProjectListMaxCount" resultType="int">
		select count(prj.prj_seq)
		from project_info prj
		left join code_detail cd on cd.mst_cd = 'PS01' and prj.ps_cd = cd.dtl_cd
		left join customer cust on cust.cust_seq = prj.cust_seq
		where prj.prj_nm like #{projectName} ${optionalQuery}
	</select>
	
	<!-- select2, 고객사의 번호와 이름을 반환 -->
	<select id="getCustomerList" resultType="com.ojt.bean.CustomerBean">
		select
			cust_seq as customerNumber,
			cust_nm as customerName
	 	from customer where cust_nm like #{customer}
	 	order by cust_seq
	</select>
	
	<!-- 프로젝트 번호, 시작일, 종료일, 유지보수 종료일 검사 -->
	<select id="matchProjectInfo" parameterType="com.ojt.bean.ProjectBean" resultType="int">
		select count(prj_seq)
		from project_info
		where prj_seq = #{projectNumber}
		    and prj_st_dt = #{projectStartDate}
		    and prj_ed_dt = #{projectEndDate}
		    <if test="maintEndDate != null and maintEndDate = ''">
		    	and maint_ed_dt = #{maintEndDate}
		    </if>
	</select>
	
	<!-- 프로젝트 등록 -->
	<insert id="insertProject" parameterType="com.ojt.bean.ProjectBean">
		insert into project_info values(
			project_sequence.nextval,
			#{projectName},
			#{customerNumber}, 
			#{projectStartDate}, 
			#{projectEndDate},
			#{projectDetail},
			#{projectStateCode},
			#{maintStartDate},
			#{maintEndDate}
		)
	</insert>
	
	<!-- 프로젝트 등록 후 시퀀스 -->
	<select id="getProjectNumber" resultType="int">
		select project_sequence.currval from dual
	</select>
	
	<!-- 프로젝트 상세 정보 -->
	<select id="getProjectInfo" resultType="com.ojt.bean.ProjectBean">
		select 
    		prj.prj_seq as projectNumber,
    		prj.prj_nm as projectName,
    		prj.cust_seq as customerNumber,
    		cust.cust_nm as customerName,
    		prj.prj_st_dt as projectStartDate,
    		prj.prj_ed_dt as projectEndDate,
    		prj.maint_st_dt as maintStartDate,
    		prj.maint_ed_dt as maintEndDate,
    		prj.ps_cd as projectStateCode,
    		prj.prj_dtl as projectDetail,
    		ps.dtl_cd_nm as projectStateName
		from project_info prj
		inner join code_detail ps on ps.mst_cd = 'PS01' and prj.ps_cd = ps.dtl_cd
		inner join customer cust on cust.cust_seq = prj.cust_seq
		where prj.prj_seq = #{projectNumber}
	</select>
	
	<select id="getPsList" resultType="com.ojt.bean.CodeBean">
		select
			dtl_cd as detailCode,
			dtl_cd_nm as codeName
		from code_detail
		where mst_cd = 'PS01'
		order by dtl_cd
	</select>
	
	<select id="getStringListProjectState" resultType="String">
		select dtl_Cd as detailCode from code_detail where mst_cd = 'PS01' order by dtl_cd
	</select>
	
	<!-- 프로젝트 상태 수정 -->
	<update id="updateProjectState" parameterType="com.ojt.bean.ProjectBean">
		update project_info set
		ps_cd = #{projectStateCode}
		where prj_seq = #{projectNumber}
	</update>
	
	<!-- 프로젝트 수정 -->
	<update id="updateProject" parameterType="com.ojt.bean.ProjectBean">
		update project_info set
			prj_nm = #{projectName},
			cust_seq = #{customerNumber}, 
			prj_st_dt = #{projectStartDate},
			prj_ed_dt = #{projectEndDate}, 
			prj_dtl = #{projectDetail},
			ps_cd = #{projectStateCode},
			maint_st_dt = #{maintStartDate},
			maint_ed_dt = #{maintEndDate}
		where prj_seq = #{prjectNumber}
	</update>
	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject">
		delete project_info where prj_seq = #{projectNumber}
	</delete>
	
	<!-- ============ 프로젝트 필요 기술 ============== -->
	<!-- 프로젝트 필요기술 조회 -->
	<select id="getProjectSKList" resultType="com.ojt.bean.CodeBean" parameterType="int">
		select
			dtl_cd as detailCode,
			dtl_cd_nm as codeName
		from code_detail
		where mst_cd='SK01' and
		dtl_cd in (select sk_cd from project_sk where prj_seq = #{projectNumber})
		order by dtl_cd
	</select>
	
	<!-- 전체 기술 리스트 -->
	<select id="getSKList" resultType="com.ojt.bean.CodeBean">
		select 
			dtl_cd as detailCode,
			dtl_cd_nm as codeName
		from code_detail where mst_cd = 'SK01'
		order by dtl_cd
	</select>
	
	<!-- 프로젝트 필요기술 등록 -->
	<insert id="insertProjectSK">
		insert into project_sk values(#{projectNumber}, #{skillCode})
	</insert>
	
	<!-- 프로젝트 팔요기술 삭제 -->
	<delete id="deleteProjectSK" parameterType="int">
		delete project_sk where prj_seq = #{projectNumber}
	</delete>
	
	<!-- 프로젝트 역할 리스트 -->
	<select id="getRole" resultType="com.ojt.bean.CodeBean">
		select
			dtl_cd as detailCode,
			dtl_cd_nm as codeName
		from code_detail where mst_cd = 'RO01'
		order by dtl_cd
	</select>
	
	<!-- 프로젝트 역할 코드 리스트 -->
	<select id="getRoleCodeList" resultType="String">
		select
			dtl_cd
		from code_detail
		where mst_cd = 'RO01'
	</select>
	
	<!-- ===== 밸리데이션 ===== -->
	<!-- 고객사가 존재하는지 -->
	<select id="hasCustomer" parameterType="int" resultType="Integer">
		select 
			cust_seq as customerNumber
		from customer where cust_seq = ${customerNumber}
		order by cust_seq
	</select>
	
	<!-- 기술이 모두 존재하는지 확인 -->
	<select id="hasSkill" parameterType="String" resultType="Integer">
		select 
			count(dtl_cd) 
		from code_detail
		where mst_cd = 'SK01' and dtl_cd in (${query})
	</select>
	
</mapper>